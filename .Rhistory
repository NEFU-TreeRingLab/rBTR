# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
warnings()
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
BP_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSBP")[,-3] %>%
rename( description = description_EN )
FM_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSFM")[,-3] %>%
rename( description = description_EN )
library(openxlsx)
library(tidyverse)
BP_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSBP")[,-3] %>%
rename( description = description_EN )
FM_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSFM")[,-3] %>%
rename( description = description_EN )
usethis::use_data(BP_param,overwrite = TRUE)
usethis::use_data(FM_param,overwrite = TRUE)
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::check()
file.edit("DESCRIPTION")
devtools::document( )
devtools::check()
file.edit("DESCRIPTION")
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::check()
remove.packages("rBTR")
devtools::load_all()
mclim <- Compute_clim( LS_clim , Clim_param,syear =   )
View(mclim)
clim <- filter(mclim ,Year>= 1963)
gg <- btr(clim = mclim,parameters = BP_param,syear = 1963 )
View(BP_param)
parameters = BP_param
View(parameters)
redir <- paste0("res_",format(Sys.time(), "%Y%m%d_%H-%M-%OS"))
dir.create(path = eval(redir) )
parameters$values <- as.numeric(parameters$values)
growth_Param  <- dplyr::filter(parameters, modul == "gR"  ) ## 生长速率阈值参数
## error-catching
if (is.na(syear) ) {syear = min(clim$Year)} else {
if( syear < min(clim$Year) ){ print("syear is wrong") }
}
syear = NA
eyear = NA
intraannual = F
## error-catching
if (is.na(syear) ) {syear = min(clim$Year)} else {
if( syear < min(clim$Year) ){ print("syear is wrong") }
}
if (is.na(eyear)) {eyear = max(clim$Year)} else {
if( eyear > max(clim$Year) ){ print("eyear is wrong") }
}
## 提取对应年份数据
clim <- dplyr::filter( clim, Year >= syear & Year <= eyear)
microclim <- Compute_gR(clim , growth_Param)
fixparam.divi <- dplyr::filter(parameters ,  modul == "division" & paramtype == "fixed") %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
fixparam.growth.fiber <- dplyr::filter(parameters ,  modul == "growthC" & paramtype == "fixed") %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
fixparam.growth.vessel <- dplyr::filter(parameters ,  modul == "growthV" & paramtype == "fixed") %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
dynparam.growth.0 <- dplyr::filter(parameters ,  modul == "division" & paramtype == "dynamic") %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
cells <- dplyr::filter(parameters ,  grepl("C0", modul ) ) %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
cells[is.na(cells)] <- 0
vessels <- dplyr::filter(parameters ,  grepl("V0", modul ) ) %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
vessels[is.na(vessels)] <- 0
temThreshold <- dplyr::filter(growth_Param, parameter == "T1")$values
##test use
dailyParameters = logical()
summaryYears <- list()
years = 1963
xylogenesis <- list(cells[-1,],vessels[-1,])
names(xylogenesis) <- c("cells","vessels")
gR.year <- dplyr::filter(microclim , Year == years)
### 进度条
print(  paste0("Modeling ", years," / ", "Final ", eyear )    )
pb <- utils::txtProgressBar(title = "PB",min = 1, max = nrow(gR.year), style = 3, file = stderr())
## 年初重置部分参数
dynparam.growth.t <- dynparam.growth.0
dynparam.growth.t$Age <- dynparam.growth.t$Age + years - syear
# j  = 1  ## 正在生长的细胞层数计数
# k  = 1  ## 正在生长的导管层数计数
# dcl = 0  ## 完成生长的细胞层数计数
# dvl = 0  ## 完成生长的导管层数计数
interimDailyParam <- matrix(NA,ncol = ncol(dynparam.growth.t)+2,nrow = 366)
colnames(interimDailyParam) <- c("years","Today",colnames(dynparam.growth.t))
## 重置结束
actAccumulatedTem <- 0 ## 活动积温 active accumulated temperature
summaryDaily <- list()
for ( Today in 1:nrow(gR.year) ) { ## daily sycle start
# for (Today in 1:130) {
# print("")
# print(c(years,Today))
# print(dynparam.growth.t)
# cat( c(years, Today,"\n",as.character(dynparam.growth.t)) , file = "E:\\文档-正在使用\\论文内容\\202203\\code\\11.txt",
#      sep = " ", fill = T, labels = paste0("{", 1:10, "}:"),append = T)
clim.today <- gR.year[Today,]
aatToday <- (clim.today$TEM - temThreshold)
aatToday[aatToday<0] <- 0
actAccumulatedTem <- actAccumulatedTem + aatToday
# print( paste( Today, actAccumulatedTem ,clim.today$rootd )  )
# dynparam.growth.t <- L_balance(clim.today, dynparam.growth.t ,fixparam.light)
if (actAccumulatedTem >= fixparam.divi$AAT & clim.today$rootd > 0 ) { ## if start 可以生长时计算细胞分裂分化
# print( paste( "START",Today    ) )
newCells <-  cell_division(clim.today, fixparam.divi, fixparam.growth.fiber, fixparam.growth.vessel, dynparam.growth.t,
cells, vessels) ### , TVA,TA
newCells[[1]]  <- stats::na.omit(newCells[[1]])
newCells[[2]]  <- stats::na.omit(newCells[[2]])
# TC <- TC + newCells[[4]][1]
dynparam.growth.t <- newCells[[3]]
# tt2 <- cbind(years,Today,dynparam.growth.t)
interimDailyParam[Today,] <- as.numeric(c(years,Today,dynparam.growth.t))
##
if ( nrow(newCells[[1]]) != 0  ) {
xylogenesis[["cells"]] <- dplyr::bind_rows(xylogenesis[["cells"]],newCells[[1]])
if (nrow(newCells[[2]])!= 0 ) {
xylogenesis[["vessels"]] <- dplyr::bind_rows(xylogenesis[["vessels"]],newCells[[2]])
}
} ## newCells != 0
## 细胞生长部分 #####
# j <- dcl
# k <- dvl
layer.max <- nrow(xylogenesis[["cells"]])
#
# nrow(xylogenesis[["cells"]]$DDOY = 0 )
growthing.cells <- dplyr::filter( xylogenesis[["cells"]] , DDOY == 0  )
if ( layer.max != 0 & nrow( growthing.cells ) != 0 ) {
growthing.cells <- cells_growth(cell = growthing.cells, CorV = "C" , clim.today, layer.max,
fixparam.growth.fiber, fixparam.growth.vessel, dynparam.growth.t )
# growthing.cells$DDOY = clim.today$DOY
rowOfCells <- growthing.cells$cell_L
xylogenesis[["cells"]][rowOfCells,] <- growthing.cells
} ## cell end-------------
layer.max <- nrow(xylogenesis[["vessels"]])
growthing.cells <- dplyr::filter( xylogenesis[["vessels"]], DDOY == 0  )
if( layer.max != 0 & nrow(growthing.cells) != 0  ){  ## 有导管时导管生长
growthing.cells <- cells_growth(cell = growthing.cells, CorV = "V" , clim.today, layer.max,
fixparam.growth.fiber,fixparam.growth.vessel, dynparam.growth.t)
rowOfCells <- growthing.cells$NoV
xylogenesis[["vessels"]][rowOfCells,] <- growthing.cells
} ## 有导管时导管生长 end ---------------------
todayVessels <- xylogenesis[["vessels"]]
todayFibers <- xylogenesis[["cells"]]
colnames(todayVessels) <- paste("V", sep = "" , colnames(todayVessels) )
dailyResult <- dplyr::left_join(todayFibers, todayVessels, by = c("Year" = "VYear", "cell_L" = "Vcell_L") )
# dailyResult
#%>% mutate(doy = "Today", .after = "Year")
#dailyResult$doy[ dailyResult$doy == "Today"] <- Today
summaryDaily[paste0(Today)] <- list(dailyResult)
} ## if (actAccumulatedTem >= fixparam.divi$AT) end  可生长日期判定结束 -----------------
utils::setTxtProgressBar(pb = pb, value = Today)
# todayVessels <- xylogenesis[["vessels"]]
# todayFibers <- xylogenesis[["cells"]]
#
#
# colnames(todayVessels) <- paste("V", sep = "" , colnames(todayVessels) )
#
# dailyResult = left_join(todayFibers, todayVessels, by = c("Year" = "VYear", "cell_L" = "Vcell_L") )
#
# # dailyResult
# #%>% mutate(doy = "Today", .after = "Year")
#
# #dailyResult$doy[ dailyResult$doy == "Today"] <- Today
#
# finald[paste0(Today)] <- list(dailyResult)
#
# Today  = Today +1
# Today
} ## today sycle end  每日生长计算结束 ------------------
gR.year[Today,]
(clim.today$TEM - temThreshold)
aatToday
aatToday<0
actAccumulatedTem + aatToday
actAccumulatedTem
actAccumulatedTem >= fixparam.divi$AAT & clim.today$rootd > 0
newCells
cell_division(clim.today, fixparam.divi, fixparam.growth.fiber, fixparam.growth.vessel, dynparam.growth.t,
cells, vessels)
clim.today
fixparam.divi
fixparam.growth.fiber
fixparam.growth.vessel
dynparam.growth.t
cells
vessels
cell_division(clim.today, fixparam.divi, fixparam.growth.fiber, fixparam.growth.vessel, dynparam.growth.t,
cells, vessels)
clim.today$gE*  min( clim.today$gT, clim.today$gM, clim.today$gV)
clim.today$gE* min( clim.today$gT, clim.today$gM)
dynparam.growth.t$grwothSeason < 2
egR <- clim.today$gE*  min( clim.today$gT, clim.today$gM, clim.today$gV)  ## Vessels growth rate
wgR <- clim.today$gE* min( clim.today$gT, clim.today$gM)          ## fiber  growth rate
## error catch
# dynparam.growth.t$grwothSeason[egR <= 0.1 ] <- 1 ## & clim.today$DOY > 200
egR[dynparam.growth.t$grwothSeason < 2 ] <- 0.001 ## 生长季快结束时细胞不扩大
egR <= 0.05 & clim.today$DOY > 200
## error catch
dynparam.growth.t$grwothSeason[egR <= 0.05 & clim.today$DOY > 200 ] <- 2 ##
dynparam.growth.t$grwothSeason
dynparam.growth.t$grwothSeason < 2
## error catch
dynparam.growth.t$grwothSeason[egR <= 0.05 & clim.today$DOY > 200 ] <- 1 ##
egR[dynparam.growth.t$grwothSeason == 1 ] <- 0.001 ## 生长季快结束时细胞不扩大
## growth velocity
dynparam.growth.t$v_c.fiber  =  fixparam.divi$va_c.fiber * egR # ( wgR^(1 + dynparam.growth.t$L_just) )
dynparam.growth.t$v_w.fiber   =  fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
dynparam.growth.t$v_l.fiber  =  fixparam.divi$va_l.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
dynparam.growth.t$v_c.vessel =  fixparam.divi$va_c.vessel * egR # ( wgR^(1 + dynparam.growth.t$L_just2) )
dynparam.growth.t$v_w.vessel =  fixparam.divi$va_w.vessel * wgR *(1+clim.today$L_i.vessel) # ( wgR^(1 - dynparam.growth.t$L_just2) )
dynparam.growth.t$v_l.vessel =  fixparam.divi$va_l.vessel * wgR *(1+clim.today$L_i.vessel) # ( wgR^(1 - dynparam.growth.t$L_just2) )
### cambium grwoth from a bind model （）
dynparam.growth.t$T_age = fixparam.divi$alpha_age *
exp(fixparam.divi$beta_age * dynparam.growth.t$Age) + fixparam.divi$p213
fixparam.divi$alpha_age
fixparam.divi$p213
### cambium grwoth from a bind model （）
dynparam.growth.t$T_age = fixparam.divi$alpha_age *
exp(fixparam.divi$beta_age * dynparam.growth.t$Age)
egR <- clim.today$gE*  min( clim.today$gT, clim.today$gM, clim.today$gV)  ## Vessels growth rate
wgR <- clim.today$gE* min( clim.today$gT, clim.today$gM)          ## fiber  growth rate
## error catch
dynparam.growth.t$grwothSeason[egR <= 0.05 & clim.today$DOY > 200 ] <- 1 ##
egR[dynparam.growth.t$grwothSeason == 1 ] <- 0.001 ## 生长季快结束时细胞不扩大
## growth velocity
dynparam.growth.t$v_c.fiber  =  fixparam.divi$va_c.fiber * egR # ( wgR^(1 + dynparam.growth.t$L_just) )
dynparam.growth.t$v_w.fiber   = fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
dynparam.growth.t$v_l.fiber  =  fixparam.divi$va_l.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
dynparam.growth.t$v_c.vessel =  fixparam.divi$va_c.vessel * egR # ( wgR^(1 + dynparam.growth.t$L_just2) )
dynparam.growth.t$v_w.vessel =  fixparam.divi$va_w.vessel * wgR *(1+clim.today$L_i.vessel) # ( wgR^(1 - dynparam.growth.t$L_just2) )
dynparam.growth.t$v_l.vessel =  fixparam.divi$va_l.vessel * wgR *(1+clim.today$L_i.vessel) # ( wgR^(1 - dynparam.growth.t$L_just2) )
### cambium grwoth from a bind model （）
dynparam.growth.t$T_age = fixparam.divi$alpha_age *
exp(fixparam.divi$beta_age * dynparam.growth.t$Age)
dynparam.growth.t$czgR =  fixparam.divi$alpha_cz *
exp(fixparam.divi$beta_cz * ( egR )  ) ## new
dynparam.growth.t$czgR[ dynparam.growth.t$czgR > egR ] <- egR ## error catch
v_cz <- ( fixparam.divi$va_cz + dynparam.growth.t$T_age )* dynparam.growth.t$czgR  ## new
dynparam.growth.t$egR = egR ## check 以后修改
v_cz[dynparam.growth.t$grwothSeason == 1 ] <- 0 ## error catch 非生长季不生长
dynparam.growth.t$dCA_cz[dynparam.growth.t$dCA_cz == 0 ] <- cells$CA
dynparam.growth.t$Vcz <- v_cz
Layers = 0
# CA_cz = cells$CA + dynparam.growth.t$dCA_cz
CA_cz = dynparam.growth.t$dCA_cz
for (i in 1:10) {
CA_cz = (1+ v_cz) * CA_cz
if ( CA_cz >= (2*cells$CA) ) {
Layers  = Layers + 1
CA_cz = cells$CA
}
}
dynparam.growth.t$dCA_cz = CA_cz
Ct = cells[-1,] # 生成空白矩阵
Vt = vessels[-1,]
Nv = 0
if (Layers > 0 ) { ## 判读是否分裂
for (i in 1 : Layers ) { ## 分裂便计算分化
dynparam.growth.t$SumCL = dynparam.growth.t$SumCL +1
cells$Year = clim.today$Year
cells$cell_L = dynparam.growth.t$SumCL
cells$EDOY = clim.today$DOY
Ct = dplyr::bind_rows(Ct , cells)
if (dynparam.growth.t$SumV == 0 & dynparam.growth.t$Vvcmax != 0 ) {
Nv = 1
}else{
## P_VG <- deltaD*TVA*dynparam.growth.t$SumV/dynparam.growth.t$Vvlmax/TA
dynparam.growth.t$deltaVN = dynparam.growth.t$deltaVN + 1
Nv = dynparam.growth.t$deltaVN %/% fixparam.divi$deltaD
dynparam.growth.t$deltaVN = dynparam.growth.t$deltaVN %% fixparam.divi$deltaD
}
if (fixparam.divi$deltaD == 0) {Nv = 0}
dynparam.growth.t$SumV = dynparam.growth.t$SumV + Nv
if (Nv != 0) { ## 判断分化导管数量
vessels$Year = clim.today$Year
vessels$cell_L = cells$cell_L
vessels$EDOY = clim.today$DOY
vessels$VN = Nv
dynparam.growth.t$SumVL = dynparam.growth.t$SumVL +1
vessels$NoV = dynparam.growth.t$SumVL
Vt = dplyr::bind_rows(Vt , vessels)
}else{
Vt[i,] = NA
}
## 导管生长判断结束
} ## 每层生长结束
Today_G = list(Ct,Vt,dynparam.growth.t)
}else{
Ct[1,] = NA
Vt[1,] = NA
Today_G = list(Ct,Vt,dynparam.growth.t)
} ## 层生长结束
Layers > 0
Layers
dynparam.growth.t$SumCL +1
clim.today$Year
dynparam.growth.t$SumCL
cells$cell_L
cells$EDOY
clim.today$DOY
dplyr::bind_rows(Ct , cells)
dynparam.growth.t$SumV == 0 & dynparam.growth.t$Vvcmax != 0
dynparam.growth.t$SumV
dynparam.growth.t$Vvcmax
View(dynparam.growth.t)
View(dynparam.growth.t)
dynparam.growth.t$SumV == 0 & dynparam.growth.t$`v_c.vessel ` != 0
dynparam.growth.t$`v_c.vessel ` != 0
View(dynparam.growth.0)
egR
dynparam.growth.t
View(dynparam.growth.t)
View(dynparam.growth.0)
dynparam.growth.0 <- dplyr::filter(parameters ,  modul == "division" & paramtype == "dynamic") %>%
dplyr::select( c("parameter","values") ) %>% tidyr::spread( key = 'parameter', value = 'values')
## 年初重置部分参数
dynparam.growth.t <- dynparam.growth.0
dynparam.growth.t$Age <- dynparam.growth.t$Age + years - syear
newCells[[3]]
egR <- clim.today$gE*  min( clim.today$gT, clim.today$gM, clim.today$gV)  ## Vessels growth rate
wgR <- clim.today$gE* min( clim.today$gT, clim.today$gM)          ## fiber  growth rate
## error catch
dynparam.growth.t$grwothSeason[egR <= 0.05 & clim.today$DOY > 200 ] <- 1 ##
egR[dynparam.growth.t$grwothSeason == 1 ] <- 0.001 ## 生长季快结束时细胞不扩大
## growth velocity
dynparam.growth.t$v_c.fiber  =  fixparam.divi$va_c.fiber * egR # ( wgR^(1 + dynparam.growth.t$L_just) )
dynparam.growth.t$v_w.fiber   = fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
View(dynparam.growth.t)
## 年初重置部分参数
dynparam.growth.t <- dynparam.growth.0
dynparam.growth.t$Age <- dynparam.growth.t$Age + years - syear
## growth velocity
dynparam.growth.t$v_c.fiber  =  fixparam.divi$va_c.fiber * egR # ( wgR^(1 + dynparam.growth.t$L_just) )
fixparam.divi$va_c.fiber * egR
## 年初重置部分参数
dynparam.growth.t <- dynparam.growth.0
## growth velocity
dynparam.growth.t$v_c.fiber  =  fixparam.divi$va_c.fiber * egR  %>% as.numeric() # ( wgR^(1 + dynparam.growth.t$L_just) )
dynparam.growth.t$v_w.fiber[1]
dynparam.growth.t$v_w.fiber[1]   = fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
View(dynparam.growth.t)
dynparam.growth.t$v_w.fiber[1]   = fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
## growth velocity
dynparam.growth.t$v_c.fiber[1]  =  fixparam.divi$va_c.fiber * egR  %>% as.numeric() # ( wgR^(1 + dynparam.growth.t$L_just) )
dynparam.growth.t$v_w.fiber[1]   = fixparam.divi$va_w.fiber * wgR *(1+clim.today$L_i.fiber) # ( wgR^(1 - dynparam.growth.t$L_just) )
dynparam.growth.t$v_c.fiber
dynparam.growth.t$v_l.fiber
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::load_all()
mclim <- Compute_clim( LS_clim , Clim_param  )
clim <- filter(mclim ,Year>= 1963)
gg <- btr(clim = mclim,parameters = BP_param,syear = 1963 )
BP_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSBP")[,-3] %>%
rename( description = description_EN )
FM_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSFM")[,-3] %>%
rename( description = description_EN )
usethis::use_data(BP_param,overwrite = TRUE)
usethis::use_data(FM_param,overwrite = TRUE)
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::load_all()
gg <- btr(clim = mclim,parameters = BP_param,syear = 1963 )
ggplot(clim)+
geom_line(aes(x = DOY , y = L_i.fiber ))
View(clim)
library(tidyverse)
library(data.table)
library(openxlsx)
library(insol)
ggplot(clim)+
geom_line(aes(x = DOY , y = L_i.fiber ))
ggplot(clim)+
geom_line(aes(x = dL_i , y = L_i.fiber ))
View(clim)
ggplot(gg$microclim)+
geom_line(aes(x = DOY , y = L_i.fiber ))
ggplot(clim)+
geom_line(aes(x = dL_i , y = L_i.fiber ))
ggplot(gg$microclim)+
geom_line(aes(x = dL_i , y = L_i.fiber ))
View(gg)
View(gg[["annaulRing"]])
View(BP_param)
rings <- left_join(gg$annaulRing, BP_ring)
View(rings)
rings <- bind_rows(gg$annaulRing, BP_ring)
View(rings)
rings <- bind_rows( mutate(gg$annaulRing,sp = "SIM" )    , mutate( BP_ring,sp= "Obs" ) )
ggplot(rings)+
geom_line(aes(x = Year, y = RingWidth, color = sp ))
cells <- gg$xylem_trait %>% filter( Year  >= 2013)
View(cells)
ggplot(cells,aes(DOY,LA))+
geom_point()
ggplot(cells,aes(Doy,LA))+
geom_point()
ggplot(cells,aes(cell_L,LA))+
geom_point()
ggplot(cells,aes(cell_L,CV))+
geom_point()
BP_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSBP")[,-3] %>%
rename( description = description_EN )
FM_param <- read.xlsx("E:\\文档-正在使用\\论文内容\\202303\\GithubData\\Table_S.xlsx",sheet = "NewPara_LSFM")[,-3] %>%
rename( description = description_EN )
usethis::use_data(BP_param,overwrite = TRUE)
usethis::use_data(FM_param,overwrite = TRUE)
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::load_all()
gg <- btr(clim = mclim,parameters = BP_param,syear = 1993 )
ggplot(gg$microclim)+
geom_line(aes(x = DOY , y = L_i.fiber ))
ggplot(gg$microclim)+
geom_line(aes(x = dL_i , y = L_i.fiber ))
rings <- bind_rows( mutate(gg$annaulRing,sp = "SIM" )    , mutate( BP_ring,sp= "Obs" ) )
ggplot(rings)+
geom_line(aes(x = Year, y = RingWidth, color = sp ))
cells <- gg$xylem_trait %>% filter( Year  >= 2013)
ggplot(cells,aes(cell_L,CV))+
geom_point()
ggplot(cells,aes(cell_L,CV))+
geom_point()+
facet_grid(Year~.)
# usethis::
# use_r("0_MainFun")
# use_r("1_MicroClim")
# use_r("1_5_GR")
# use_r("2_DiviDiffer")
# use_r("3_CellGrowth")
# use_r("4_LBalance")
#
# usethis::use_data(clim,parameter)
# use_r("000_SubMainFun")
devtools::document()
devtools::load_all()
